'use strict'

import dynamoDocumentClient from '@util/aws/functions/dynamodb-document-client'

export default (() => {

  /**
   * Perform a DynamoDB Document Client "get" function,
   * using the primary key, AWS-supplied @connectionId.
   * Returns the entry object if it exists, otherwise returns null.
   * 
   * @param  {String} connectionId - The original connectionId provided/generated by AWS
   * @return {Object} - The DB entry Item object, or null if not found
   */
  const byConnectionId = async (connectionId) => {
    const getParams = {
      connectionId: connectionId
    }
    try {
      let entry = await dynamoDocumentClient.get(getParams)
      return entry.Item
    } catch (e) {
      return null
    }
  }
  
  /**
   * Perform a DynamoDB Document Client "query" by Global Secondary Index
   * @connId and return the resulting array.
   * 
   * @param  {String} connId - The client-supplied connection string generated and supplied by the initiator.
   * @return {Object} - DynamoDB query result array, or null if no results
   */
  const byConnId = async (connId) => {
  	const queryParams = {
	    IndexName: 'connIdIndex',
	    KeyConditionExpression: '#connId = :conn_id',
	    ExpressionAttributeNames:{
	        "#connId": "connId"
	    },
	    ExpressionAttributeValues: {
	        ":conn_id": connId
	    }
	  }
    try {
      let entries = await dynamoDocumentClient.query(queryParams)
      return entries.Items
    } catch (e) {
      return null
    }
  }

  return {
    byConnectionId,
    byConnId
  }
})()